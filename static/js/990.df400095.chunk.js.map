{"version":3,"file":"static/js/990.df400095.chunk.js","mappings":"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","sources":["components/Resume/ResumeNew.js"],"sourcesContent":["import React, { useState, useCallback, useTransition } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport pdf from \"../../Assets/Marko Petrina Resume.pdf\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\";\r\nimport { BsChevronLeft, BsChevronRight } from \"react-icons/bs\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\r\nimport \"react-pdf/dist/esm/Page/TextLayer.css\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nfunction ResumeNew() {\r\n  const [width, setWidth] = useState(1200);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [touchStart, setTouchStart] = useState(null);\r\n  const [touchEnd, setTouchEnd] = useState(null);\r\n  const [mouseStart, setMouseStart] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [slideDirection, setSlideDirection] = useState('');\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  const minSwipeDistance = 50;\r\n\r\n  const handleResize = useCallback(() => {\r\n    setWidth(window.innerWidth);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [handleResize]);\r\n\r\n  const onDocumentLoadSuccess = useCallback(({ numPages }) => {\r\n    setNumPages(numPages);\r\n  }, []);\r\n\r\n  const handleAnimationEnd = useCallback(() => {\r\n    setSlideDirection('');\r\n  }, []);\r\n\r\n  const handlePageChange = useCallback((direction) => {\r\n    if (slideDirection) return;\r\n    \r\n    startTransition(() => {\r\n      if (direction === 'next' && pageNumber < numPages) {\r\n        setSlideDirection('slide-left');\r\n        setPageNumber(prev => prev + 1);\r\n      } else if (direction === 'prev' && pageNumber > 1) {\r\n        setSlideDirection('slide-right');\r\n        setPageNumber(prev => prev - 1);\r\n      }\r\n    });\r\n  }, [numPages, pageNumber, slideDirection]);\r\n\r\n  // Touch handlers with useCallback\r\n  const onTouchStart = useCallback((e) => {\r\n    setTouchEnd(null);\r\n    setTouchStart(e.targetTouches[0].clientX);\r\n  }, []);\r\n\r\n  const onTouchMove = useCallback((e) => {\r\n    setTouchEnd(e.targetTouches[0].clientX);\r\n  }, []);\r\n\r\n  const onTouchEnd = useCallback(() => {\r\n    if (!touchStart || !touchEnd) return;\r\n    \r\n    const distance = touchStart - touchEnd;\r\n    const isLeftSwipe = distance > minSwipeDistance;\r\n    const isRightSwipe = distance < -minSwipeDistance;\r\n\r\n    if (isLeftSwipe) {\r\n      handlePageChange('next');\r\n    }\r\n    if (isRightSwipe) {\r\n      handlePageChange('prev');\r\n    }\r\n  }, [touchStart, touchEnd, handlePageChange]);\r\n\r\n  // Mouse handlers with useCallback\r\n  const onMouseDown = useCallback((e) => {\r\n    setMouseStart(e.clientX);\r\n    setIsDragging(true);\r\n  }, []);\r\n\r\n  const onMouseMove = useCallback((e) => {\r\n    if (!isDragging) return;\r\n    \r\n    const distance = mouseStart - e.clientX;\r\n    if (Math.abs(distance) > minSwipeDistance) {\r\n      handlePageChange(distance > 0 ? 'next' : 'prev');\r\n      setIsDragging(false);\r\n    }\r\n  }, [isDragging, mouseStart, handlePageChange]);\r\n\r\n  const onMouseUp = useCallback(() => {\r\n    setIsDragging(false);\r\n  }, []);\r\n\r\n  // Add loading indicator when page is changing\r\n  const pageChangeClass = isPending ? 'page-transition' : '';\r\n\r\n  return (\r\n    <div>\r\n      <Container fluid className=\"resume-section\">\r\n        <div className=\"resume-top\">\r\n          <div className=\"page-indicator\">\r\n            {isPending ? (\r\n              <span>Loading...</span>\r\n            ) : (\r\n              <span>Page {pageNumber} of {numPages}</span>\r\n            )}\r\n          </div>\r\n          <Button\r\n            variant=\"primary\"\r\n            href={pdf}\r\n            target=\"_blank\"\r\n            className=\"download-button\"\r\n          >\r\n            <AiOutlineDownload />&nbsp;Download Resume\r\n          </Button>\r\n        </div>\r\n\r\n        <div className={`pdf-wrapper ${pageChangeClass}`}>\r\n          {pageNumber > 1 && (\r\n            <div\r\n              className={`nav-arrow left ${isPending ? 'disabled' : ''}`}\r\n              onClick={() => !isPending && handlePageChange('prev')}\r\n            >\r\n              <BsChevronLeft />\r\n            </div>\r\n          )}\r\n          \r\n          <div\r\n            className=\"pdf-container\"\r\n            onTouchStart={onTouchStart}\r\n            onTouchMove={onTouchMove}\r\n            onTouchEnd={onTouchEnd}\r\n            onMouseDown={onMouseDown}\r\n            onMouseMove={onMouseMove}\r\n            onMouseUp={onMouseUp}\r\n            onMouseLeave={onMouseUp}\r\n          >\r\n            <Document\r\n              file={pdf}\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n              loading={<div className=\"pdf-loading\">Loading PDF...</div>}\r\n              className={`pdf-document ${slideDirection}`}\r\n              onAnimationEnd={handleAnimationEnd}\r\n            >\r\n              <Page \r\n                pageNumber={pageNumber} \r\n                scale={width > 786 ? 0.9 : 0.5}\r\n                className=\"pdf-page\"\r\n              />\r\n            </Document>\r\n          </div>\r\n\r\n          {pageNumber < numPages && (\r\n            <div\r\n              className={`nav-arrow right ${isPending ? 'disabled' : ''}`}\r\n              onClick={() => !isPending && handlePageChange('next')}\r\n            >\r\n              <BsChevronRight />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(ResumeNew);\r\n"],"names":["ResumeNew","width","setWidth","useState","numPages","setNumPages","pageNumber","setPageNumber","touchStart","setTouchStart","touchEnd","setTouchEnd","mouseStart","setMouseStart","isDragging","setIsDragging","slideDirection","setSlideDirection","isPending","startTransition","useTransition","handleResize","useCallback","window","innerWidth","React","addEventListener","removeEventListener","onDocumentLoadSuccess","_ref","handleAnimationEnd","handlePageChange","direction","prev","onTouchStart","e","targetTouches","clientX","onTouchMove","onTouchEnd","distance","isRightSwipe","onMouseDown","onMouseMove","Math","abs","onMouseUp","pageChangeClass","_jsx","children","_jsxs","Container","fluid","className","Button","variant","href","pdf","target","AiOutlineDownload","onClick","BsChevronLeft","onMouseLeave","Document","file","onLoadSuccess","loading","onAnimationEnd","Page","scale","BsChevronRight","pdfjs","GlobalWorkerOptions","workerSrc","version"],"sourceRoot":""}